play.http.secret.key = "%APPLICATION_SECRET%"
application.langs = "ru"

# Стандартизованный обработчик ошибок, менять не рекомендуется
# play.http.errorHandler = ru.dasreda.controllers.DefaultErrorHandler

play {
  modules.enabled += modules.BatisModule  # Подключение модуля для mybatis + postgres
  modules.enabled += modules.LinkingModule  # Включение своих сервисов и прочих DAO
  modules.disabled += play.api.cache.ehcache.EhCacheModule
  modules.enabled += play.api.cache.redis.RedisCacheModule
  modules.enabled += play.modules.swagger.SwaggerModule # Подключение Swagger

  # умолчательные настройки для cross-domain доступа между микросервисами. Менять не рекомендуется, до тех пор пока вы точно не понимаете что делаете
  filters.disabled += play.filters.hosts.AllowedHostsFilter
  filters.disabled += play.filters.csrf.CSRFFilter
  filters.disabled += play.filters.headers.SecurityHeadersFilter

  filters.enabled += play.filters.cors.CORSFilter
  filters {
    cors {
      allowedOrigins = null
      allowedHttpMethods = null
      allowedHttpHeaders = null
    }
  }
}
play.cache.redis {
  # bind the instance to unqualified APIs
  bind-default: true
  # unqualified APIs bind to "local" instance
  default-cache: "local"

  instances {

    "local": {
      host: ${?REDIS_URL}
      port: 6379
      database: 1
      password: null
    }

    "remote": {
      host: ${?REDIS_URL}
      port: 6379
      database: 2
      password: null
    }

    "failing": {
      host: ${?REDIS_URL}
      port: 6380 # there is no running instance! The connection fails
      database: 1
      recovery: "custom"
    }
  }
}
ws.timeout.request = "5 seconds"
ws.acceptAnyCertificate = true
ws.ssl.loose.acceptAnyCertificate = true

api.version = "v1"